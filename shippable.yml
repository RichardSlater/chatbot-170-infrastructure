language: none

resources:
  - name: azure_cli_configuration
    type: cliConfig
    integration: Azure (Chatbot Experiments)

  - name: amido_chatbots_notify
    type: notification
    integration: amido-chatbots
    versionTemplate:
      recipients:
        - "#chatbots"

jobs:
  - name: provisioning
    type: runSh
    steps:
      - IN: azure_cli_configuration
      - IN: chatbot-170-infrastructure_master
      - TASK:
        - script: |
            export TF_VERSION=0.11.3
            export TF_FILE=terraform_"$TF_VERSION"_linux_amd64.zip
            mkdir -p /tmp/terraform
            wget -nv https://releases.hashicorp.com/terraform/$TF_VERSION/$TF_FILE
            unzip -o $TF_FILE -d /tmp/terraform
            sudo chmod +x /tmp/terraform/terraform
            mv /tmp/terraform/terraform /usr/bin/terraform
            terraform --version
        - script: >
            export
            ARM_SUBSCRIPTION_ID="$(az account show --query "{id:id}" --output tsv)"
            ARM_CLIENT_ID=$AZURE_CLI_CONFIGURATION_INTEGRATION_APPID
            ARM_CLIENT_SECRET=$AZURE_CLI_CONFIGURATION_INTEGRATION_PASSWORD
            ARM_TENANT_ID=$AZURE_CLI_CONFIGURATION_INTEGRATION_TENANT
        - script: |
            echo $CHATBOT-170-INFRASTRUCTURE_MASTER_STATE
            cd "$CHATBOT-170-INFRASTRUCTURE_MASTER_STATE"
            terraform --version
            terraform init
            terraform get
            terraform apply --auto-approve
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
  - name: deprovisioning
    type: runSh
    steps:
      - IN: azure_cli_configuration
      - IN: chatbot-170-infrastructure_master
        switch: off
      - TASK:
        - script: |
            export TF_VERSION=0.11.3
            export TF_FILE=terraform_"$TF_VERSION"_linux_amd64.zip
            mkdir -p /tmp/terraform
            wget -nv https://releases.hashicorp.com/terraform/$TF_VERSION/$TF_FILE
            unzip -o $TF_FILE -d /tmp/terraform
            sudo chmod +x /tmp/terraform/terraform
            mv /tmp/terraform/terraform /usr/bin/terraform
            terraform --version
        - script: >
            export
            ARM_SUBSCRIPTION_ID="$(az account show --query "{id:id}" --output tsv)"
            ARM_CLIENT_ID=$AZURE_CLI_CONFIGURATION_INTEGRATION_APPID
            ARM_CLIENT_SECRET=$AZURE_CLI_CONFIGURATION_INTEGRATION_PASSWORD
            ARM_TENANT_ID=$AZURE_CLI_CONFIGURATION_INTEGRATION_TENANT
        - script: |
            cd "$CHATBOT-170-INFRASTRUCTURE_MASTER_STATE"
            terraform --version
            terraform init
            terraform get
            terraform destroy -force
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
